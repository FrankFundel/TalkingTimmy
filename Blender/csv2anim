import bpy
import os
import csv
import numpy as np

from bpy.props import StringProperty, BoolProperty
from bpy_extras.io_utils import ImportHelper
from bpy.types import Operator


class OT_TestOpenFilebrowser(Operator, ImportHelper):

    bl_idname = "test.open_filebrowser"
    bl_label = "Open the file browser (yay)"
    
    filter_glob: StringProperty(
        default='*.csv',
        options={'HIDDEN'}
    )
    
    some_boolean: BoolProperty(
        name='Do a thing',
        description='Do a thing with the file you\'ve selected',
        default=True,
    )

    def execute(self, context):
        """Do something with the selected file(s)."""

        filename, extension = os.path.splitext(self.filepath)
                
        obj = bpy.context.selected_objects[0]
        scene = bpy.context.scene
        fps = scene.render.fps
        start = scene.frame_current
        
        frame = start
        keyframes = []
        with open(self.filepath, mode='r') as csvfile:
            reader = csv.reader(csvfile)
            for row in reader:
                keyframes.append(row)
                
        blendshapes = keyframes.pop(0)
        
        for row in keyframes:
            c = 0
            for col in row:
                blendshape = blendshapes[c]
                if blendshape in obj.data.shape_keys.key_blocks:
                    obj.data.shape_keys.key_blocks[blendshape].value = float(col)
                    obj.data.shape_keys.key_blocks[blendshape].keyframe_insert(data_path="value", frame=frame)
                c += 1
            frame += 1
            
        return {'FINISHED'}


def register():
    bpy.utils.register_class(OT_TestOpenFilebrowser)


def unregister():
    bpy.utils.unregister_class(OT_TestOpenFilebrowser)


if __name__ == "__main__":
    register()

    # test call
    bpy.ops.test.open_filebrowser('INVOKE_DEFAULT')